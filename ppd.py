import base64, marshal
exec(marshal.loads(base64.b64decode(b'YwAAAAAAAAAAAAAAAAAAAAAGAAAAQAAAAHMoAAAAZABkAWwAWgBkAGQBbAFaAWUCZQGgA2UAoARkAqEBoQGDAQEAZAFTACkD6QAAAABOc/QOAABZd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUdBQUFBUUFBQUFITW9BQUFBWkFCa0FXd0FXZ0JrQUdRQmJBRmFBV1VDWlFHZ0EyVUFvQVJrQXFFQm9RR0RBUUVBWkFGVEFDa0Q2UUFBQUFCT2M1QUtBQUJaZDBGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVZEJRVUZCVVVGQlFVRklUVzlCUVVGQldrRkNhMEZYZDBGWFowSnJRVWRSUW1KQlJtRkJWMVZEV2xGSFowRXlWVUZ2UVZKclFYRkZRbTlSUjBSQlVVVkJXa0ZHVkVGRGEwUTJVVUZCUVVGQ1QyTXdVVWhCUVVKYVpEQkdRbEZWUmtKUlZVWkNVVlZHUWxGVlJrSlJWVVpDVVZWR1FsRlZWa0pSVlVaQ1ZWVkdRbEZWUmtsVU0wWkNVVlZHUWxkclJrTmhNRVpZWkRCR1dGb3dTbkpSVldSU1VXMUtRbEp0UmtKV01VWkNWMnRHUjJNd1JuTmlNRTVoVVZWS2NsRldaRE5TUm1SdVZHMTBRbEl4UmtOWmEwWlRXVlZLU0ZWVlRsaGFNVnB5VVZSR2RsSXhjRUpWYlhSRFYxWkdRbFl5Wkd0aE1GWklWVlZvWVZGWGJFWlJWbHAyVTFad1VtSkhkRVJXTTA1RVdUSjRSMkpGU2t4UlZYUmhVVmhHYjFGV1JrWlJWbkJTWkVkNFEySXdNVU5SVmtaRFlrVkplVlZWZUc1a01GWkRVVlZrVmxSWFpETlJiVVpGVmpGV1NWZHJSalZTUlVaU1VsVkdZVlZZYkVWUlZXUlNWR3RhTTFGdFJrVmlWbFpLVjJ4RmVHSkZVblpVVlU1WVducHNjMUpFU2xKVU1rWXpWRzVzVmsxc1ZrMVhhMFUxWWtWUmVWWlZPV0ZhTUd4WVVWVnNUbEZyUmxKUmJYUkNWbXN4UWxkclJrZFdSVVpJVlZWS1ZtUXdSbmRTVjFaeVVWVkdRbEZWUmxWaVJ6bEtWMWN4TkdKSFJqWlNXSEJPWlcxUk1sZFZSblpaYkdRMlVWUmtUbFo2UmxKV1ZWWlNXakpOZVZSdWJGcFhSVW96V1Zaak1XSnJiRWxWYmxwcFRXNW9ObE5WWkV0T1ZXeElVMjVPWVZZelRqUlVXSEJPVFRCT2NscElRbXRTTW1kNFYxZHNRazVyYkVaUmJXeHBVakZhZVZSV1VrNWxhelV6WTBWV2FVMXFVblZhUlU1RFRWZE5lVlpYWkd0U01taDNXVE5zUTAxSFNYbFBXRTVxWlZWS2RGbHFUa3BhTWtaWVpVaE9ZVll5VW05WmEwNURZMWRKZVZOVmRFUmlWVEZEVVZWR1FsRlZSa0pSVlVaQ1VWVkdRbEZWUmtKUk1FWkNVVlZHUTFGVlJrSlJWVlpPVVZWR1FsRnVjRTFhTUVaQ1VWVm9NMUZXU2tKUmJWSkdZbXBDUTFwRlJrTmpWVVpvVVZWT2JWRlZaRzlSVmtaR1VWZFNRbEZ1UmtKWlZVWkZZakZHUWxGclJrbFZWVloyVVZaYWNsRlhSa1pSYTBaU1VXNW9RbUpXUmtKV1dHUkNZMFZHY2s1WE5VaFRWbkJ2VWpCc1lXRklSa1ZQU0VKRFpFYzVSVmw2VG5ObGFrcHVWMjV3YTFJeFNqSmFSbWhWV1ZWS1dWcEliR2hYUmtwelRXMWtWMkpYU2tsV2JuQm9WRzA1UmxwRlpITmtSbkJyWWpCYWFrMXVhSE5YYkdoQ1kwVkdNR0l3Vm10U01Wa3dXa1UxZGxGdFJtaGhNRVpxV2pKMFFsRlZSa1ZaVlVwSVUyNU9ZVll6V21oUmFrNUxUVmRLZFZWdGVHeFRSa1pQVVZWR1FsRlhUak5pTUVaQ1VWVkdTbEZXUmpOUmEwNXVVbFV4UWxWV1VUVlpNbVI2VVZWR1FsSkVXa05OTUVvelYydE5NVTFIVmtsVmJYQkNXakJHUWxGVlJrSlJWVVpDVVZWR1FsRlZSa0pSYldSQ1VWVkdRbG93UmtKUlZVcEZVVlZHUWxGWFRUTlhWVVpDVVZWR1MxRlZhRkpSVjBadVVtcG9RbEl4UmtSWGEwWlBZMFZHV0ZWVlZuRlZWVzgxVVZjMU0xRXlSbTVUYlhSRFZqTk9RbGt6YUZOUFJVWjBZakJPWVZGV2NIbFJiR2hLV2tkU1FsUnRkRU5OTTJSRVdWZGtTbFl3UmtwVVZVcENWVlZLY2xFd1drNVJWMUpDVlRKa1ExWXhSa3RhYTBaTFkxVktlRkpWVG0xVlZUUjNVV3BPTTFKSFpETlNiWFJFWWxoT1JWa3llRmROUlU1SlpEQktZVkZZVmtWUlZ6ZzBXVEphVWxWcWFFSk5Sa1pDVjBaR2MwOVZTbGxrTUZaMlVWZDRjbEpGYUROU2ExcHVVVEpvUWxWVlZrSlpNVkpMVDBWS1RGRlZkSFpWVlVaRFVWVm9VbE5IV2tKVU1GSkNWbTFPUWxGWFpFTmhNRVpDVlZWR1ExRlZUa1ZSV0dSR1VWWldNMUZZYUVKVFJUVlFXa2hrUmxGclJrSlNWVVpDVlZWS1lWRlZSa1pSVm5CQ1VXeFNRbE5HUmtWWGEwVjVVa1ZHVWxKVlJtRlJWMmhWVVZWT2NsVkdVbk5WYWxwRVlrWmFObGRzYUVwa1JrWllXa2Q0YVdKc1NUSlJla0Y0WkcxV2RXTklRbWxTTUZadVYyMHdOVTVGZEZKU2JVWkRUVzFvYzFkV1pGTmlSMDUxVlVoQ05WRlZSa0pSVlRsMVRtdEdRbEZWUm14aFZVcEhXVEkxUzJSdFRuQlJWRnBLVVRGYU5sTlZhRXRpUjAxNlVXNWFhV0pyTlhOVFZXaFBUVVpzV1ZWcVJtcGxWVXB4V1dwS1UySkZiRlpYYWxwR1pWZG9hVlZXVFhoWlZtaFpZek5zVFZORVJtbFhSV1JUV2tkV05sVllUbTFWTW5nMVVWVkdRbEZWUms5aU1FcHJUVEk1UlZOc2FFNVRNbFp2VjJ0U1dsWjZWakZaYWs1U1dqRnZlVlpxUWtwVFJUVnhXVlZqTldSdFNrUlJiWEJwVFd4S2MxcFhjRXRXVjBaSVlraHdTbE5HU2pKWmFrbzBaV3RzU0dORVJtcE5NVVp1VjFaa1QyRnNjRmxSYWtKS1UwVTFkMXBGWkZaYU1rcElVbXBXV2xaNlZucFhWbVJ1WkZac2RHVklXbUZOTURVeldXcE9VbVJXYTNsUFdGSktWVEowVFUxdFpHOWxWbkJaVW1wR1lWZEZOSGRaZW14MlVrWnZlVlpxUWxoYU0xSTJXa1ZrUjAxSFVsbFViVnBhVFdwc2NsZHRVblpTYlU1SlUyNUNhV0pzVW1oUlZ6VkxZa1JLYmxwSE1XaFdlbFp5VjFaa05HTXlUbTVaTUVaQ1VWVlNhRkZVU2pSaVIwb3dZakJXYVUwd1NuTlpiVFZLVWtWR1FsRlZSWGxhTVZweFdXdGpOV1ZzY0ZSaE1HUllXakEwZUZreU1UWlpWVTVJVjI1Q2FWSXhXakZYVm1ONFlrWmtibUZJYkdGWFJUVXpXV3BKTVdWc2NGZGlNR2hxWWxaYWRWcEdaRFJoUjA0d1lqQldZV0pYZUhwWGJHaEtVMVZHUWxGVlJtcGFNblJDVVZWR1EyVlZUbEpSVlVaQ1UwVnNURkZWUmtKUlZFcHVWbTV3V2swd2NHOVpNRXBPVVZWR1FsRnVjRWxhTUVaQ1VWVkdTbEV3Vm01VFZsWkNWVlJTUTFGclJrWlVNRVp1WkRCS1JWRlZWa3BSVmtwQ1VXdE9RbEpWWkVKVk1WRTBVVEJHV2xKVlJsbFRWMFpDVVZWR1FrMXRaRzlhYkdkNVRWZG9hRlo2Vm0xWFJHeDJVbXhyZVdWSGVGcFhSVzh5VWxSR1EyTXhjRmhTYm5CaFZUQktjMWx0TlZOaVIwNXdVV3BHYW1KWVpHNVVNbXhEVG10V2NrOVVSbXRUUlVsNFdrVk9RMkpYUmxobFIzaHBZbFZhTUZkc1RrSk9hMnhKWWpCV1RXSnNTVEJhUlZaaFRtdHNSbVZJUW1wTk1VWnVXVlZrUjJWcmJFUldiWFJLVWpOb2QxbHRNVmRsYTJ4SVVtNVdZVkV3U2paWFZtaGhZa1ZzU0ZKdWNFcFJNVm8yVXpGR1IyVlZVa0pSVlVaQ1VUSjBVbGt5YUVKUlZVWkNVVzVzUm1Rd1JrSlJWV2hLVW10R1FsRlZSbXBhTUZaQ1VWVkdSVmxWUm5SUFdHOTVXak5DYlZkRVNrZE5WMUpJWVVoYWFtSkViRzFOYldSaFlqRndXRkp0ZEdGWFJYQTFVVE5rUWxGVlJrbFRWMFpDVVZWR1FrMXRaRzlhYkdkNVRsZG9hVll4V20xWFJHeDJVakpOZW1KSWNHdFNNVm93V1RKb1NsRlZSa0pTUjBaRFZqSjRNVmt3YUZkTlJtUnVWVzV3YUZkR1NuTlpNbWh5VVZWR1FsSkhSa05pYTNCeldYcE9WMk15VWtsVFZYQkNVVlZHUWxreVpISlJWVVpDVVc1c1JGVlZSa0pSVldoS1V6QkdRbEZWUlhsYU1tTTBXV3hqTldFeVVsaGxSM2hSV2pCV1FsRlZSa05sYTJ4dVVWVkdRbEV5WkVWUmEwWkdVbFZHVWxvd2FFUmFNV3hLVW0xa2RsRnJUa0pTVld4Q1ZWWnNRMUV3UmtaVE1FWlNZakJLUkZGVlZsWlJWa1pWVFRCS1FscDZNSEJDWkc5SFdXMUdlbHBVV1RBeVoyUjBXVmhLZW1GSFJuTXlaMUpzWlVkV2FqSm5Wbk5pTWtacll6bHZTbGxxV1RCYVIxWnFZakpTYkhGUlFubENaMEZCUVVoSlIwRkJRVUV5WjFKcFlrZFdjakpuWnpoaVZ6bHJaRmQ0YkZCblJVRkJRVUo2UWtGQlFVRkNRVUZIUVVVOUtRWGFCbUpoYzJVMk5Ob0hiV0Z5YzJoaGJOb0VaWGhsWTlvRmJHOWhaSFBhQ1dJMk5HUmxZMjlrWmFrQWNnWUFBQUJ5QmdBQUFOb0VZbXhsYTlvSVBHMXZaSFZzWlQ0QkFBQUFjd1FBQUFBUUFCZ0IpBdoGYmFzZTY02gdtYXJzaGFs2gRleGVj2gVsb2Fkc9oJYjY0ZGVjb2RlqQByBgAAAHIGAAAA2gRibGVr2gg8bW9kdWxlPgEAAABzBAAAABAAGAE=')))